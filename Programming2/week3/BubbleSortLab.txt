Description of the Problem

In the bubble sort algorithm, smaller values gradually “bubble” their way upward to the top of the array like air bubbles rising in water, while the larger values sink to the bottom. The bubble sort makes several passes through the array. On each pass, successive pairs of elements are compared. If a pair is in increasing order (or the values are identical), we leave the values as they are. If a pair is in decreasing order, their values are swapped in the array. Write a program that sorts an array of 10 integers using bubble sort.

Sample Output:

Data items in original order

2 6 4 8 10 12 89 68 45 37

Data items in ascending order

2 4 6 8 10 12 37 45 68 89

Problem-Solving Tips

1. Each “bubbling” pass through the array brings one element, the ith up to its correct position. This means that the program will require arraySize - 1 passes through the array to sort the entire array.

2. Each bubbling pass will look at each pair of adjacent elements and swap them if they are not already in sorted order.

3. To swap two elements, the value of one element will have to be stored in a temporary storage variable while the value of the other element is placed in the first, and then the second element can be replaced with the temporary storage value.

